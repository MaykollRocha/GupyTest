# -*- coding: utf-8 -*-
"""GupyTeste.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_bXyITNGYMTf3L44-bsyOLpsfLehxeJ3

1) Observe o trecho de código abaixo:

int INDICE = 13, SOMA = 0, K = 0;

Enquanto K < INDICE faça { K = K + 1; SOMA = SOMA + K; }

Imprimir(SOMA);

Ao final do processamento, qual será o valor da variável SOMA?
"""

indice = 13
soma = 0
k = 0

while k < indice:
  k = k + 1
  soma = soma + k
print(soma)

""" Dado a sequência de Fibonacci, onde se inicia por 0 e 1 e o próximo valor sempre será a soma dos 2 valores anteriores (exemplo: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34...), escreva um programa na linguagem que desejar onde, informado um número, ele calcule a sequência de Fibonacci e retorne uma mensagem avisando se o número informado pertence ou não a sequência.

IMPORTANTE: Esse número pode ser informado através de qualquer entrada de sua preferência ou pode ser previamente definido no código;
"""

numero = int(input("Digite um número: "))
a, b = 0, 1
while b < numero:
    a, b = b, a + b
if b == numero:
    print(f"O número {numero} pertence à sequência de Fibonacci.")
else:
    print(f"O número {numero} não pertence à sequência de Fibonacci.")

""" Dado um vetor que guarda o valor de faturamento diário de uma distribuidora, faça um programa, na linguagem que desejar, que calcule e retorne:
* O menor valor de faturamento ocorrido em um dia do mês;
* O maior valor de faturamento ocorrido em um dia do mês;
* Número de dias no mês em que o valor de faturamento diário foi superior à média mensal.

IMPORTANTE:

a) Usar o json ou xml disponível como fonte dos dados do faturamento mensal;

b) Podem existir dias sem faturamento, como nos finais de semana e feriados. Estes dias devem ser ignorados no cálculo da média;

"""

json = {
  "faturamento_diario": [
    {"dia": "2024-08-01", "valor": 200.50},
    {"dia": "2024-08-02", "valor": 230.00},
    {"dia": "2024-08-03", "valor": 150.00},
    {"dia": "2024-08-04", "valor": 240.00},
    {"dia": "2024-08-05", "valor": 300.00},
    {"dia": "2024-08-06", "valor": 250.00},
    {"dia": "2024-08-07", "valor": 0.00},
    {"dia": "2024-08-08", "valor": 100.00},
    {"dia": "2024-08-09", "valor": 120.00},
    {"dia": "2024-08-10", "valor": 400.00},
    {"dia": "2024-08-11", "valor": 420.00},
    {"dia": "2024-08-12", "valor": 350.00},
    {"dia": "2024-08-13", "valor": 100.00},
    {"dia": "2024-08-14", "valor": 0.00},
    {"dia": "2024-08-15", "valor": 90.00},
    {"dia": "2024-08-16", "valor": 150.00},
    {"dia": "2024-08-17", "valor": 80.00},
    {"dia": "2024-08-18", "valor": 300.00},
    {"dia": "2024-08-19", "valor": 120.00},
    {"dia": "2024-08-20", "valor": 250.00},
    {"dia": "2024-08-21", "valor": 0.00},
    {"dia": "2024-08-22", "valor": 350.00},
    {"dia": "2024-08-23", "valor": 130.00},
    {"dia": "2024-08-24", "valor": 200.00},
    {"dia": "2024-08-25", "valor": 70.00},
    {"dia": "2024-08-26", "valor": 150.00},
    {"dia": "2024-08-27", "valor": 300.00},
    {"dia": "2024-08-28", "valor": 0.00},
    {"dia": "2024-08-29", "valor": 120.00},
    {"dia": "2024-08-30", "valor": 250.00},
    {"dia": "2024-08-31", "valor": 400.00},
  ]
}

json['faturamento_diario']

def calcular_faturamento(json):
  #tirar os valores 0
  count = 31
  media = 0
  min = json[0]['valor']
  max = json[0]['valor']
  for i in json:
    if i['valor'] == 0:
      count -= 1
    if i['valor'] < min and i['valor'] != 0:
      min = i['valor']
    if i['valor'] > max and i['valor'] != 0:
      max = i['valor']
    media += i['valor']

  dias_acima_media = [i for i in json if i['valor'] > media/count]
  print(f"O valor mais baixo em um dia do mes {round(min,2)}")
  print(f"O valor mais alto em um dia do mes {round(max,2)}")
  print(f"A média mensal é {round(media/count,2)} e seus dias foram:")
  [print(f"No dia {i['dia']} com um valor de {i['valor']}") for i in dias_acima_media]


calcular_faturamento(json['faturamento_diario'])

"""4) Dado o valor de faturamento mensal de uma distribuidora, detalhado por estado:
* SP – R$ 67.836,43

* RJ – R$ 36.678,66

* MG – R$ 29.229,88

* ES – R$ 27.165,48

* Outros – R$19.849,53

Escreva um programa na linguagem que desejar onde calcule o percentual de representação que cada estado teve dentro do valor total mensal da distribuidora.
"""

dicionario = {
    "SP": 67836.43,
    "RJ": 36678.66,
    "MG": 29229.88,
    "ES": 27165.48,
    "Outros": 19849.53
}
soma = sum(dicionario.values())
for estado, valor in dicionario.items():
  print(f"{estado}: {((valor / soma) * 100):.2f}%")

"""5) Escreva um programa que inverta os caracteres de um string.

IMPORTANTE:

a) Essa string pode ser informada através de qualquer entrada de sua preferência ou pode ser previamente definida no código;

b) Evite usar funções prontas, como, por exemplo, reverse;

"""

string = "Otorrinolaringologista"
gnirts = ''
for i in range(len(string),0,-1):
  gnirts += string[i-1]
print(gnirts)